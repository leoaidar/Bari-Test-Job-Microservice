version: '3.4'

services:
  redis:
    image: redis:alpine
    container_name: 'bari-redis'
    command: ["redis-server", "--appendonly", "yes"]
    hostname: localhost
    restart: always
    ports:
        - 6379:6379
    networks:
        - bari-network
    volumes:
        - redis-data:/data
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:6379"]
        interval: 30s
        timeout: 10s
        retries: 5
  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'bari-rabbitmq'
    hostname: localhost
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    restart: always
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5
    networks: 
        - bari-network
  bari.test.job.api:
    image: ${DOCKER_REGISTRY-}baritestjobapi    
    container_name: 'Message-Microservice'
    restart: always
    depends_on:
        - redis
        - rabbitmq
    environment:             
      TZ: America/Sao_Paulo
        - ASPNETCORE_URLS=https://+:443;http://+:80
    ports: 
        - "5000:80"
        - "5001:80"
    links: 
        - redis
        - rabbitmq
    networks: 
        - bari-network
    build:
      context: .
      dockerfile: Bari.Test.Job.Api/Dockerfile
networks:
  bari-network:
    driver: bridge
volumes:
  redis-data:

